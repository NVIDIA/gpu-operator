apiVersion: v1
kind: ServiceAccount
metadata:
  name: nvidia-gpu-driver-ubuntu22.04
  namespace: test-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nvidia-gpu-driver-ubuntu22.04
  namespace: test-operator
rules:
- apiGroups:
  - security.openshift.io
  resourceNames:
  - privileged
  resources:
  - securitycontextconstraints
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nvidia-gpu-driver-ubuntu22.04
rules:
- apiGroups:
  - config.openshift.io
  resources:
  - clusterversions
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/eviction
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nvidia-gpu-driver-ubuntu22.04
  namespace: test-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nvidia-gpu-driver-ubuntu22.04
subjects:
- kind: ServiceAccount
  name: nvidia-gpu-driver-ubuntu22.04
  namespace: test-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nvidia-gpu-driver-ubuntu22.04
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nvidia-gpu-driver-ubuntu22.04
subjects:
- kind: ServiceAccount
  name: nvidia-gpu-driver-ubuntu22.04
  namespace: test-operator
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    openshift.io/scc: nvidia-gpu-driver-ubuntu22.04
  labels:
    app: nvidia-gpu-driver-ubuntu22.04-7c6d7bd86b
    app.kubernetes.io/component: nvidia-driver
    nvidia.com/node.os-version: ubuntu22.04
    nvidia.com/precompiled: "false"
  name: nvidia-gpu-driver-ubuntu22.04-7c6d7bd86b
  namespace: test-operator
spec:
  selector:
    matchLabels:
      app: nvidia-gpu-driver-ubuntu22.04-7c6d7bd86b
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: nvidia-driver-ctr
      labels:
        app: nvidia-gpu-driver-ubuntu22.04-7c6d7bd86b
        app.kubernetes.io/component: nvidia-driver
        nvidia.com/node.os-version: ubuntu22.04
        nvidia.com/precompiled: "false"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - nvidia-driver
                - nvidia-vgpu-manager
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - init
        command:
        - nvidia-driver
        env:
        - name: NVIDIA_VISIBLE_DEVICES
          value: void
        - name: GPU_DIRECT_RDMA_ENABLED
          value: "true"
        image: nvcr.io/nvidia/driver:525.85.03-ubuntu22.04
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - rm -f /run/nvidia/validations/.driver-ctr-ready
        name: nvidia-driver-ctr
        securityContext:
          privileged: true
          seLinuxOptions:
            level: s0
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - nvidia-smi && touch /run/nvidia/validations/.driver-ctr-ready
          failureThreshold: 120
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 60
        volumeMounts:
        - mountPath: /run/nvidia
          mountPropagation: Bidirectional
          name: run-nvidia
        - mountPath: /run/nvidia-topologyd
          name: run-nvidia-topologyd
        - mountPath: /var/log
          name: var-log
        - mountPath: /dev/log
          name: dev-log
        - mountPath: /host-etc/os-release
          name: host-os-release
          readOnly: true
        - mountPath: /run/mellanox/drivers/usr/src
          mountPropagation: HostToContainer
          name: mlnx-ofed-usr-src
        - mountPath: /run/mellanox/drivers
          mountPropagation: HostToContainer
          name: run-mellanox-drivers
        - mountPath: /sys/module/firmware_class/parameters/path
          name: firmware-search-path
        - mountPath: /sys/devices/system/memory/auto_online_blocks
          name: sysfs-memory-online
        - mountPath: /lib/firmware
          name: nv-firmware
        - mountPath: /opt/config/test-file
          name: test-cm
          readOnly: true
          subPath: test-file
        - mountPath: /opt/config/test-host-path
          name: test-host-path
        - mountPath: /opt/config/test-host-path-ro
          name: test-host-path-ro
          readOnly: true
      - args:
        - reload_nvidia_peermem
        command:
        - nvidia-driver
        env:
        - name: NVIDIA_VISIBLE_DEVICES
          value: void
        image: nvcr.io/nvidia/driver:525.85.03-ubuntu22.04
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - nvidia-driver probe_nvidia_peermem
          failureThreshold: 1
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: nvidia-peermem-ctr
        securityContext:
          privileged: true
          seLinuxOptions:
            level: s0
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - nvidia-driver probe_nvidia_peermem
          failureThreshold: 120
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /run/nvidia
          mountPropagation: Bidirectional
          name: run-nvidia
        - mountPath: /var/log
          name: var-log
        - mountPath: /dev/log
          name: dev-log
          readOnly: true
        - mountPath: /run/mellanox/drivers
          mountPropagation: HostToContainer
          name: run-mellanox-drivers
        - mountPath: /opt/config/test-file
          name: test-cm
          readOnly: true
          subPath: test-file
        - mountPath: /opt/config/test-host-path
          name: test-host-path
        - mountPath: /opt/config/test-host-path-ro
          name: test-host-path-ro
          readOnly: true
      hostPID: true
      initContainers:
      - args:
        - uninstall_driver
        command:
        - driver-manager
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NVIDIA_VISIBLE_DEVICES
          value: void
        - name: ENABLE_GPU_POD_EVICTION
          value: "true"
        - name: ENABLE_AUTO_DRAIN
          value: "true"
        - name: DRAIN_USE_FORCE
          value: "false"
        - name: DRAIN_POD_SELECTOR_LABEL
          value: ""
        - name: DRAIN_TIMEOUT_SECONDS
          value: 0s
        - name: DRAIN_DELETE_EMPTYDIR_DATA
          value: "false"
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: GPU_DIRECT_RDMA_ENABLED
          value: "true"
        image: nvcr.io/nvidia/cloud-native/k8s-driver-manager:devel
        imagePullPolicy: IfNotPresent
        name: k8s-driver-manager
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /run/nvidia
          mountPropagation: Bidirectional
          name: run-nvidia
        - mountPath: /host
          mountPropagation: HostToContainer
          name: host-root
          readOnly: true
        - mountPath: /sys
          name: host-sys
        - mountPath: /run/mellanox/drivers
          mountPropagation: HostToContainer
          name: run-mellanox-drivers
      nodeSelector:
        nvidia.com/gpu.deploy.driver: "true"
      priorityClassName: system-node-critical
      serviceAccountName: nvidia-gpu-driver-ubuntu22.04
      tolerations:
      - effect: NoSchedule
        key: nvidia.com/gpu
        operator: Exists
      volumes:
      - hostPath:
          path: /run/nvidia
          type: DirectoryOrCreate
        name: run-nvidia
      - hostPath:
          path: /var/log
        name: var-log
      - hostPath:
          path: /dev/log
        name: dev-log
      - hostPath:
          path: /etc/os-release
        name: host-os-release
      - hostPath:
          path: /run/nvidia-topologyd
          type: DirectoryOrCreate
        name: run-nvidia-topologyd
      - hostPath:
          path: /run/mellanox/drivers/usr/src
          type: DirectoryOrCreate
        name: mlnx-ofed-usr-src
      - hostPath:
          path: /run/mellanox/drivers
          type: DirectoryOrCreate
        name: run-mellanox-drivers
      - hostPath:
          path: /run/nvidia/validations
          type: DirectoryOrCreate
        name: run-nvidia-validations
      - hostPath:
          path: /
        name: host-root
      - hostPath:
          path: /sys
          type: Directory
        name: host-sys
      - hostPath:
          path: /sys/module/firmware_class/parameters/path
        name: firmware-search-path
      - hostPath:
          path: /sys/devices/system/memory/auto_online_blocks
        name: sysfs-memory-online
      - hostPath:
          path: /run/nvidia/driver/lib/firmware
          type: DirectoryOrCreate
        name: nv-firmware
      - configMap:
          items:
          - key: test-file
            path: test-file
          name: test-cm
        name: test-cm
      - hostPath:
          path: /opt/config/test-host-path
          type: DirectoryOrCreate
        name: test-host-path
      - hostPath:
          path: /opt/config/test-host-path-ro
          type: DirectoryOrCreate
        name: test-host-path-ro
  updateStrategy:
    type: OnDelete
---
