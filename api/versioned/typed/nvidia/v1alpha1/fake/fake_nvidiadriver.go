/**
# Copyright (c) NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
**/

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/NVIDIA/gpu-operator/api/nvidia/v1alpha1"
	nvidiav1alpha1 "github.com/NVIDIA/gpu-operator/api/versioned/typed/nvidia/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeNVIDIADrivers implements NVIDIADriverInterface
type fakeNVIDIADrivers struct {
	*gentype.FakeClientWithList[*v1alpha1.NVIDIADriver, *v1alpha1.NVIDIADriverList]
	Fake *FakeNvidiaV1alpha1
}

func newFakeNVIDIADrivers(fake *FakeNvidiaV1alpha1) nvidiav1alpha1.NVIDIADriverInterface {
	return &fakeNVIDIADrivers{
		gentype.NewFakeClientWithList[*v1alpha1.NVIDIADriver, *v1alpha1.NVIDIADriverList](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("nvidiadrivers"),
			v1alpha1.SchemeGroupVersion.WithKind("NVIDIADriver"),
			func() *v1alpha1.NVIDIADriver { return &v1alpha1.NVIDIADriver{} },
			func() *v1alpha1.NVIDIADriverList { return &v1alpha1.NVIDIADriverList{} },
			func(dst, src *v1alpha1.NVIDIADriverList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.NVIDIADriverList) []*v1alpha1.NVIDIADriver {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.NVIDIADriverList, items []*v1alpha1.NVIDIADriver) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
