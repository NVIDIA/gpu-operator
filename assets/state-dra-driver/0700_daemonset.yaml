apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: nvidia-dra-driver-kubelet-plugin
  name: nvidia-dra-driver-kubelet-plugin
  namespace: "FILLED BY THE OPERATOR"
spec:
  selector:
    matchLabels:
      app: nvidia-dra-driver-kubelet-plugin
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nvidia-dra-driver-kubelet-plugin
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: nvidia-dra-driver
      # TODO: revisit the affinity / nodeSelector for this daemonset
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: feature.node.kubernetes.io/pci-10de.present
                operator: In
                values:
                - "true"
            - matchExpressions:
              - key: feature.node.kubernetes.io/cpu-model.vendor_id
                operator: In
                values:
                - NVIDIA
            - matchExpressions:
              - key: nvidia.com/gpu.present
                operator: In
                values:
                - "true"
      initContainers:
      - image: "FILLED BY THE OPERATOR"
        name: driver-validation
        command: [ 'sh', '-c' ]
        args: [ "until [ -f /run/nvidia/validations/driver-ready ]; do echo waiting for driver to be setup; sleep 5; done" ]
        securityContext:
          privileged: true
        volumeMounts:
        - name: run-nvidia-validations
          mountPath: /run/nvidia/validations
          mountPropagation: HostToContainer
      containers:
      - name: plugin
        image: "FILLED BY THE OPERATOR"
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash", "-c"]
        args:
          - /bin/entrypoint.sh
        env:
        - name: MASK_NVIDIA_DRIVER_PARAMS
          value: "false"
        - name: NVIDIA_VISIBLE_DEVICES
          value: void
        - name: CDI_ROOT
          value: /var/run/cdi
        - name: NVIDIA_MIG_CONFIG_DEVICES
          value: all
        - name: DEVICE_CLASSES
          value: imex
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        securityContext:
          privileged: true
        volumeMounts:
        - name: nvidia-dra-driver-kubelet-plugin-entrypoint
          readOnly: true
          mountPath: /bin/entrypoint.sh
          subPath: entrypoint.sh
        - name: run-nvidia-validations
          mountPath: /run/nvidia/validations
        - name: driver-install-dir
          mountPath: /driver-root
          mountPropagation: HostToContainer
          readOnly: true
        - name: host-root
          mountPath: /host
          readOnly: true
        - mountPath: /var/lib/kubelet/plugins_registry
          name: plugins-registry
        - mountPath: /var/lib/kubelet/plugins
          mountPropagation: Bidirectional
          name: plugins
        - mountPath: /var/run/cdi
          name: cdi
      volumes:
      - name: nvidia-dra-driver-kubelet-plugin-entrypoint
        configMap:
          name: nvidia-dra-driver-kubelet-plugin-entrypoint
          defaultMode: 448
      - name: run-nvidia-validations
        hostPath:
          path: "/run/nvidia/validations"
          type: DirectoryOrCreate
      - name: driver-install-dir
        hostPath:
          path: "/run/nvidia/driver"
          type: DirectoryOrCreate
      - name: host-root
        hostPath:
          path: /
      - name: plugins-registry
        hostPath:
          path: /var/lib/kubelet/plugins_registry
      - name: plugins
        hostPath:
          path: /var/lib/kubelet/plugins
      - name: cdi
        hostPath:
          path: /var/run/cdi
          type: DirectoryOrCreate
