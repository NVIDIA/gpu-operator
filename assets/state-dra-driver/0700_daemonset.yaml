apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvidia-dra-driver-kubelet-plugin
  namespace: "FILLED BY THE OPERATOR"
  labels:
    app: nvidia-dra-driver-kubelet-plugin
spec:
  selector:
    matchLabels:
      app: nvidia-dra-driver-kubelet-plugin
  template:
    metadata:
      labels:
        app: nvidia-dra-driver-kubelet-plugin
    spec:
      nodeSelector:
        nvidia.com/gpu.deploy.dra-driver-kubelet-plugin: "true"
      priorityClassName: system-node-critical
      serviceAccountName: nvidia-dra-driver
      initContainers:
        - name: driver-validation
          image: "FILLED BY THE OPERATOR"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c']
          args: ["nvidia-validator"]
          env:
            - name: WITH_WAIT
              value: "true"
            - name: COMPONENT
              value: driver
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            privileged: true
            seLinuxOptions:
              level: "s0"
          volumeMounts:
            - name: driver-install-dir
              mountPath: /run/nvidia/driver
              mountPropagation: HostToContainer
            - name: run-nvidia-validations
              mountPath: /run/nvidia/validations
              mountPropagation: Bidirectional
            - name: host-root
              mountPath: /host
              readOnly: true
              mountPropagation: HostToContainer
            - name: host-dev-char
              mountPath: /host-dev-char
      containers:
        - name: compute-domains
          securityContext:
            privileged: true
          image: "FILLED BY THE OPERATOR"
          # (cdesiniotis) note that while the k8s-dra-driver-gpu image is built on top of
          # the NVIDIA distroless base image, which does not have bash, a statically compiled
          # bash is added to the final image at /bin/bash.
          command: ["/bin/bash", "-c"]
          args:
            - /bin/entrypoint.sh "compute-domain-kubelet-plugin -v 6"
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: void
            - name: CDI_ROOT
              value: /var/run/cdi
            - name: NVIDIA_MIG_CONFIG_DEVICES
              value: all
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: nvidia-dra-driver-kubelet-plugin-entrypoint
              readOnly: true
              mountPath: /bin/entrypoint.sh
              subPath: entrypoint.sh
            - name: plugins-registry
              mountPath: /var/lib/kubelet/plugins_registry
            - name: plugins
              mountPath: /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
            - name: cdi
              mountPath: /var/run/cdi
            - name: run-nvidia-validations
              mountPath: /run/nvidia/validations
              mountPropagation: Bidirectional
            - name: driver-install-dir
              mountPath: /driver-root
              readOnly: true
              mountPropagation: HostToContainer
            - name: host-root
              mountPath: /host
              readOnly: true
              mountPropagation: HostToContainer
        - name: gpus
          securityContext:
            privileged: true
          image: "FILLED BY THE OPERATOR"
          # (cdesiniotis) note that while the k8s-dra-driver-gpu image is built on top of
          # the NVIDIA distroless base image, which does not have bash, a statically compiled
          # bash is added to the final image at /bin/bash.
          command: ["/bin/bash", "-c"]
          args:
            - /bin/entrypoint.sh "gpu-kubelet-plugin -v 6"
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: void
            - name: CDI_ROOT
              value: /var/run/cdi
            - name: NVIDIA_MIG_CONFIG_DEVICES
              value: all
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: nvidia-dra-driver-kubelet-plugin-entrypoint
              readOnly: true
              mountPath: /bin/entrypoint.sh
              subPath: entrypoint.sh
            - name: plugins-registry
              mountPath: /var/lib/kubelet/plugins_registry
            - name: plugins
              mountPath: /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
            - name: cdi
              mountPath: /var/run/cdi
            - name: run-nvidia-validations
              mountPath: /run/nvidia/validations
              mountPropagation: Bidirectional
            - name: driver-install-dir
              mountPath: /driver-root
              readOnly: true
              mountPropagation: HostToContainer
            - name: host-root
              mountPath: /host
              readOnly: true
              mountPropagation: HostToContainer
      volumes:
        - name: nvidia-dra-driver-kubelet-plugin-entrypoint
          configMap:
            name: nvidia-dra-driver-kubelet-plugin-entrypoint
            defaultMode: 448
        - name: plugins-registry
          hostPath:
            path: /var/lib/kubelet/plugins_registry
        - name: plugins
          hostPath:
            path: /var/lib/kubelet/plugins
        - name: cdi
          hostPath:
            path: /var/run/cdi
        - name: run-nvidia-validations
          hostPath:
            path: /run/nvidia/validations
            type: DirectoryOrCreate
        - name: driver-install-dir
          hostPath:
            path: /run/nvidia/driver
            type: DirectoryOrCreate
        - name: host-root
          hostPath:
            path: /
        - name: host-dev-char
          hostPath:
            path: /dev/char
